@Component
public class SftpDownloader {

    private final Session session;
    private final String rootPath;

    @Autowired
    public SftpDownloader(Session session, @Value("${sftp.root-path}") String rootPath) {
        this.session = session;
        this.rootPath = rootPath;
    }

    public byte[] downloadFile(String remoteFilePath) throws IOException, JSchException, SftpException {
        ChannelSftp channel = null;
        try (ByteArrayOutputStream outputStream = new ByteArrayOutputStream()) {
            channel = (ChannelSftp) session.openChannel("sftp");
            channel.connect();
            channel.cd(rootPath);
            channel.get(remoteFilePath, outputStream);
            return outputStream.toByteArray();
        } finally {
            if (channel != null && channel.isConnected()) {
                channel.disconnect();
            }
        }
    }

    public void downloadToLocal(String remoteFilePath, String localFilePath) throws JSchException, SftpException, IOException {
        ChannelSftp channel = null;
        try {
            channel = (ChannelSftp) session.openChannel("sftp");
            channel.connect();
            channel.cd(rootPath);
            channel.get(remoteFilePath, localFilePath);
        } finally {
            if (channel != null && channel.isConnected()) {
                channel.import java.io.IOException;
import java.nio.file.*;
import java.util.Comparator;

public class DeleteDirectory {
    public static void deleteDirectory(Path path) throws IOException {
        if (Files.exists(path)) {
            Files.walk(path)
                .sorted(Comparator.reverseOrder())
                .forEach(file -> {
                    try {
                        Files.delete(file);
                    } catch (IOException e) {
                        System.err.println("删除失败: " + file + " - " + e.getMessage());
                    }
                });
        }
    }

    public static void main(String[] args) {
        Path dir = Paths.get("要删除的目录路径");
        try {
            deleteDirectory(dir);
            System.out.println("目录已成功删除！");
        } catch (IOException e) {
            System.err.println("错误: " + e.getMessage());
        }
    }
}



