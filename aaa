在Java中使用JSch库实现SFTP上传文件时，检查并创建目标目录的步骤如下：

### 步骤说明
1. **建立SFTP连接**：使用JSch创建会话并连接到SFTP服务器。
2. **提取目标目录路径**：从远程文件路径中分离出目录部分。
3. **检查目录是否存在**：通过`stat`方法验证目录是否存在。
4. **递归创建目录**：若不存在，逐层创建目录结构。
5. **上传文件**：将本地文件上传至目标路径。

### 示例代码
```java
import com.jcraft.jsch.*;

public class SftpUploader {

    public static void main(String[] args) {
        String host = "your_host";
        int port = 22;
        String username = "your_username";
        String password = "your_password";
        String localFilePath = "local/file.txt";
        String remoteFilePath = "/remote/path/to/file.txt";

        Session session = null;
        ChannelSftp channelSftp = null;

        try {
            JSch jsch = new JSch();
            session = jsch.getSession(username, host, port);
            session.setPassword(password);
            session.setConfig("StrictHostKeyChecking", "no");
            session.connect();

            channelSftp = (ChannelSftp) session.openChannel("sftp");
            channelSftp.connect();

            // 提取目标目录路径
            String remoteDir = remoteFilePath.substring(0, remoteFilePath.lastIndexOf('/'));

            // 检查并创建目录
            createRemoteDir(channelSftp, remoteDir);

            // 上传文件
            channelSftp.put(localFilePath, remoteFilePath);
            System.out.println("文件上传成功");

        } catch (JSchException | SftpException e) {
            e.printStackTrace();
        } finally {
            if (channelSftp != null) channelSftp.disconnect();
            if (session != null) session.disconnect();
        }
    }

    private static void createRemoteDir(ChannelSftp channelSftp, String remoteDir) throws SftpException {
        String currentDir = channelSftp.pwd();
        try {
            String[] dirs = remoteDir.split("/");
            if (remoteDir.startsWith("/")) {
                channelSftp.cd("/");
            }
            for (String dir : dirs) {
                if (dir.isEmpty()) continue;
                try {
                    channelSftp.cd(dir);
                } catch (SftpException e) {
                    if (e.id == ChannelSftp.SSH_FX_NO_SUCH_FILE) {
                        channelSftp.mkdir(dir);
                        channelSftp.cd(dir);
                    } else {
                        throw e;
                    }
                }
            }
        } finally {
            channelSftp.cd(currentDir); // 恢复原目录
        }
    }
}
```

### 关键点解析
1. **路径分割与处理**：将目标目录按`/`分割，处理绝对路径及空字符串。
2. **逐层检查与创建**：通过循环进入每一层目录，若失败则创建并进入。
3. **异常处理**：捕获`SftpException`，识别目录不存在的情况（错误码`SSH_FX_NO_SUCH_FILE`）。
4. **恢复工作目录**：确保方法执行后返回到初始目录，避免影响后续操作。

此方法确保目标目录存在，若不存在则递归创建所有必需的父目录，从而实现类似`mkdir -p`的功能。