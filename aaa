根据您提供的JSON片段和描述，问题在于JSON结构被错误地序列化为多个独立对象而不是字符串数组。以下是原因分析和解决方案：

### 问题原因
1. **对象结构错误**：
   - 您的JSON显示为多个独立对象（每个包含`bytes`、`length`、`buffer`字段）
   - 实际需要的应是字符串数组：`["20230317", "20230320", ...]`

2. **Base64双重编码**：
   - 字段值（如`MjAyMzAzMTc=`）是Base64编码后的字符串
   - 解码后应为原始字符串（如`20230317`）

3. **数据库映射问题**：
   - 查询结果可能映射到了包含多个字段的对象
   - 而非直接映射到字符串列表

---

### 解决方案

#### 方法1：直接返回字符串列表（推荐）
```java
// Service层: 解码并提取字符串
public List<String> getStringList() {
    return yourRepository.findAll().stream()
            .map(entity -> {
                // 解码Base64 (示例用第一个字段)
                byte[] decodedBytes = Base64.getDecoder().decode(entity.getBytes());
                return new String(decodedBytes, StandardCharsets.UTF_8);
            })
            .collect(Collectors.toList());
}

// Controller层
@GetMapping("/data")
public List<String> getData() {
    return yourService.getStringList();
}
```

#### 方法2：使用DTO转换
```java
// DTO类
public class SimpleDTO {
    private String value; // 直接存储解码后的字符串

    // 构造方法中解码
    public SimpleDTO(YourEntity entity) {
        this.value = new String(
            Base64.getDecoder().decode(entity.getBytes()),
            StandardCharsets.UTF_8
        );
    }
    // getter
}

// Controller层
@GetMapping("/data")
public List<SimpleDTO> getData() {
    return yourRepository.findAll().stream()
            .map(SimpleDTO::new)
            .collect(Collectors.toList());
}
```

#### 方法3：修复实体映射（需改库）
如果数据库存的是原始字符串（非Base64）：
```java
@Entity
public class YourEntity {
    @Column(columnDefinition = "TEXT") // 直接存储原始字符串
    private String rawValue; // 改为字符串字段

    // 移除bytes/length/buffer等字段
}
```

---

### 关键点说明
1. **Base64解码**：
   ```java
   // 解码示例
   String base64Str = "MjAyMzAzMTc=";
   String decoded = new String(
       Base64.getDecoder().decode(base64Str),
       StandardCharsets.UTF_8
   ); // 得到 "20230317"
   ```

2. **JSON结构对比**：
   ```json
   // 当前错误结构
   [
     {"bytes": "MjAy...", "length":8, "buffer":"MjAy..."},
     {...}
   ]

   // 目标正确结构
   ["20230317", "20230320", ...]
   ```

3. **避免双重编码**：
   - 检查数据库是否已存储Base64
   - 确保服务层只做一次编解码

建议优先采用**方法1**直接返回字符串列表，这符合您期望的`"list": ["str1", "str2"]`结构。如果问题仍存在，请检查实体类字段定义是否包含多余对象属性。